services:
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'redis:/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      - kian
  mongo:
    image: mongo
    restart: always
    ports:
      - '${FORWARD_MONGO_PORT:-27017}:27017'
    volumes:
      - 'mongo:/data/db'
    networks:
      - kian
    environment:
      - MONGO_INITDB_ROOT_USERNAME=michael
      - MONGO_INITDB_ROOT_PASSWORD=secret
  app:
    build:
      context: .
      dockerfile: ./docker/local/Dockerfile
    command: go run cmd/server/main.go && go run cmd/server/schedule/main.go && go run cmd/server/presenceserver/main.go
    ports:
      - '${FORWARD_APP_PORT:-8080}:8080'
      - 6060:6060
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    develop:
      watch:
        - action: sync+restart
          path: ./
          target: /usr/src/app
    environment:
      REDIS_URL: redis:6379
    networks:
      - kian
    volumes:
      - 'go:/go/pkg'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prom_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - kian

volumes:
  prom_data:
  mongo:
  redis:
  go:

networks:
  kian:
