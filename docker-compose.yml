services:
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'redis:/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      - kian
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - kian
    environment:
      - MONGO_INITDB_ROOT_USERNAME=michael
      - MONGO_INITDB_ROOT_PASSWORD=secret
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: ./docker/app/Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on:
      - mongo # This service depends on redis. Start that first.
    environment:
      # Pass environment variables to the service
      REDIS_URL: redis:6379
    networks:
      # Networks to join (Services on the same network can communicate with each other using their name)
      - kian
    volumes:
      - ./:/app

volumes:
  redis:

networks:
  kian:
